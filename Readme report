# API Implementation Report

## Overview of Chosen APIs

This project implements a web application with both backend and frontend components, utilizing multiple APIs:

1. **Custom Backend API** - Built with Express.js to handle user-related operations
2. **REST Countries API** - External third-party API integrated in the frontend to provide country data

## Backend API Implementation

The backend is built using Node.js with Express.js framework and implements a RESTful API architecture. The implementation includes:

- **User Routes API**: Endpoints for user management (`/api/users`)
- **Database Connection**: MongoDB integration via a connection utility
- **Error Handling**: Custom middleware for handling 404 routes and general errors
- **Security**: Implementation of environment variable management with dotenv
- **Cross-Origin Resource Sharing**: CORS middleware to allow frontend-backend communication

## Frontend API Service

The frontend API service is designed to interact with the RESTful [REST Countries API](https://restcountries.com) (v3.1). The service provides various endpoints to retrieve country data:

# Fetching all countries

URL: https://restcountries.com/v3.1/all?fields=name,capital,population,region,flags,cca3


# Filtering countries by region

URL: https://restcountries.com/v3.1/region/{region}?fields=name,capital,population,region,flags,cca3
Example: https://restcountries.com/v3.1/region/europe?fields=name,capital,population,region,flags,cca3


# Searching countries by name

URL: https://restcountries.com/v3.1/name/{name}?fields=name,capital,population,region,flags,cca3
Example: https://restcountries.com/v3.1/name/france?fields=name,capital,population,region,flags,cca3


# Retrieving country details by code

URL: https://restcountries.com/v3.1/alpha/{code}
Example: https://restcountries.com/v3.1/alpha/usa


# Retrieving multiple countries by codes

URL: https://restcountries.com/v3.1/alpha?codes={codes}&fields=name,cca3
Example: https://restcountries.com/v3.1/alpha?codes=usa,can,mex&fields=name,cca3


# Searching countries by capital

URL: https://restcountries.com/v3.1/capital/{capital}
Example: https://restcountries.com/v3.1/capital/paris

## Implementation Challenges and Solutions

### Challenge 1: Efficient Data Fetching

**Challenge**: Fetching complete country data could result in large payloads and slow performance.

**Solution**: Implemented field filtering in API calls by adding the `fields` parameter to requests. This reduced payload sizes by only retrieving necessary data (name, capital, population, region, flags, cca3).

```javascript
// Before optimization:
const response = await axios.get(`${BASE_URL}/all`);

// After optimization:
const response = await axios.get(`${BASE_URL}/all?fields=name,capital,population,region,flags,cca3`);
```

### Challenge 2: Error Handling

**Challenge**: Managing API errors and providing appropriate feedback.

**Solution**: Implemented custom error middleware in the backend that:
- Handles 404 errors for undefined routes
- Provides standardized error responses
- Includes appropriate HTTP status codes

The frontend can then present meaningful error messages to users based on these standardized responses.

### Challenge 3: Cross-Origin Requests

**Challenge**: Enabling secure communication between frontend and backend services.

**Solution**: Implemented CORS middleware in the Express backend to allow controlled cross-origin requests:

```javascript
app.use(cors());
```

This allows the frontend application to make requests to the backend API even when hosted on different domains.

## Conclusion

The implementation successfully integrates both custom backend APIs and third-party APIs to provide a comprehensive solution. Key successes include:

1. Modular API structure that separates concerns
2. Efficient data retrieval through field filtering
3. Comprehensive error handling
4. Secure cross-origin communication

Future improvements could include implementing caching strategies to reduce API calls and improve performance, especially for frequently accessed country data.


Hosted link : "https://af-country-api-manu.vercel.app/" 
in vercel