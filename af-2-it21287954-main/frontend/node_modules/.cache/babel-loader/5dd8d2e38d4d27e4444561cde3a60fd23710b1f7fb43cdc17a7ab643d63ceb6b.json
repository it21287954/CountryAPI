{"ast":null,"code":"var _jsxFileName = \"E:\\\\sliit\\\\AF\\\\projet 2\\\\af-2-it21287954-main\\\\af-2-it21287954-main\\\\frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/pages/HomePage.js\nimport React, { useState, useEffect } from 'react';\nimport CountryCard from '../components/CountryCard';\nimport SearchBar from '../components/SearchBar';\nimport FilterRegion from '../components/FilterRegion';\nimport Loader from '../components/Loader';\nimport { fetchAllCountries, fetchCountriesByRegion } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = ({\n  user\n}) => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [filteredCountries, setFilteredCountries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedRegion, setSelectedRegion] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Fetch countries based on selected region\n  useEffect(() => {\n    const getCountries = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        let data;\n        if (selectedRegion) {\n          data = await fetchCountriesByRegion(selectedRegion);\n        } else {\n          data = await fetchAllCountries();\n        }\n        setCountries(data);\n        setFilteredCountries(data);\n      } catch (err) {\n        setError('Failed to fetch countries. Please try again later.');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getCountries();\n  }, [selectedRegion]);\n\n  // Filter countries based on search term\n  useEffect(() => {\n    if (searchTerm.trim() === '') {\n      setFilteredCountries(countries);\n    } else {\n      const filtered = countries.filter(country => country.name.common.toLowerCase().includes(searchTerm.toLowerCase()));\n      setFilteredCountries(filtered);\n    }\n  }, [searchTerm, countries]);\n  const handleSearchChange = value => {\n    setSearchTerm(value);\n  };\n  const handleRegionChange = region => {\n    setSelectedRegion(region);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        searchTerm: searchTerm,\n        onSearchChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterRegion, {\n        selectedRegion: selectedRegion,\n        onRegionChange: handleRegionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '40px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : filteredCountries.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '40px'\n      },\n      children: \"No countries found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countries-grid\",\n      children: filteredCountries.map(country => /*#__PURE__*/_jsxDEV(CountryCard, {\n        country: country\n      }, country.cca3, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"FyqxFt94R5E/cT0532NKgniP9Hk=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","CountryCard","SearchBar","FilterRegion","Loader","fetchAllCountries","fetchCountriesByRegion","jsxDEV","_jsxDEV","HomePage","user","_s","countries","setCountries","filteredCountries","setFilteredCountries","searchTerm","setSearchTerm","selectedRegion","setSelectedRegion","loading","setLoading","error","setError","getCountries","data","err","console","trim","filtered","filter","country","name","common","toLowerCase","includes","handleSearchChange","value","handleRegionChange","region","children","className","onSearchChange","fileName","_jsxFileName","lineNumber","columnNumber","onRegionChange","style","textAlign","marginTop","length","map","cca3","_c","$RefreshReg$"],"sources":["E:/sliit/AF/projet 2/af-2-it21287954-main/af-2-it21287954-main/frontend/src/pages/HomePage.js"],"sourcesContent":["// File: frontend/src/pages/HomePage.js\nimport React, { useState, useEffect } from 'react';\nimport CountryCard from '../components/CountryCard';\nimport SearchBar from '../components/SearchBar';\nimport FilterRegion from '../components/FilterRegion';\nimport Loader from '../components/Loader';\nimport { fetchAllCountries, fetchCountriesByRegion } from '../services/api';\n\nconst HomePage = ({ user }) => {\n  const [countries, setCountries] = useState([]);\n  const [filteredCountries, setFilteredCountries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedRegion, setSelectedRegion] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Fetch countries based on selected region\n  useEffect(() => {\n    const getCountries = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        \n        let data;\n        if (selectedRegion) {\n          data = await fetchCountriesByRegion(selectedRegion);\n        } else {\n          data = await fetchAllCountries();\n        }\n        \n        setCountries(data);\n        setFilteredCountries(data);\n      } catch (err) {\n        setError('Failed to fetch countries. Please try again later.');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    getCountries();\n  }, [selectedRegion]);\n\n  // Filter countries based on search term\n  useEffect(() => {\n    if (searchTerm.trim() === '') {\n      setFilteredCountries(countries);\n    } else {\n      const filtered = countries.filter(country => \n        country.name.common.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      setFilteredCountries(filtered);\n    }\n  }, [searchTerm, countries]);\n\n  const handleSearchChange = (value) => {\n    setSearchTerm(value);\n  };\n\n  const handleRegionChange = (region) => {\n    setSelectedRegion(region);\n  };\n\n  return (\n    <div>\n      <div className=\"search-filter-container\">\n        <SearchBar searchTerm={searchTerm} onSearchChange={handleSearchChange} />\n        <FilterRegion selectedRegion={selectedRegion} onRegionChange={handleRegionChange} />\n      </div>\n      \n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <p style={{ textAlign: 'center', marginTop: '40px' }}>{error}</p>\n      ) : filteredCountries.length === 0 ? (\n        <p style={{ textAlign: 'center', marginTop: '40px' }}>No countries found</p>\n      ) : (\n        <div className=\"countries-grid\">\n          {filteredCountries.map(country => (\n            <CountryCard key={country.cca3} country={country} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}