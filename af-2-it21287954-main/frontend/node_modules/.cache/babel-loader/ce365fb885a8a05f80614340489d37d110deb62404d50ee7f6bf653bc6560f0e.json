{"ast":null,"code":"// File: frontend/src/pages/HomePage.js\nimport React,{useState,useEffect}from'react';import CountryCard from'../components/CountryCard';import SearchBar from'../components/SearchBar';import FilterRegion from'../components/FilterRegion';import Loader from'../components/Loader';import{fetchAllCountries,fetchCountriesByRegion}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HomePage=_ref=>{let{user}=_ref;const[countries,setCountries]=useState([]);const[filteredCountries,setFilteredCountries]=useState([]);const[searchTerm,setSearchTerm]=useState('');const[selectedRegion,setSelectedRegion]=useState('');const[loading,setLoading]=useState(true);const[error,setError]=useState('');// Fetch countries based on selected region\nuseEffect(()=>{const getCountries=async()=>{try{setLoading(true);setError('');let data;if(selectedRegion){data=await fetchCountriesByRegion(selectedRegion);}else{data=await fetchAllCountries();}setCountries(data);setFilteredCountries(data);}catch(err){setError('Failed to fetch countries. Please try again later.');console.error(err);}finally{setLoading(false);}};getCountries();},[selectedRegion]);// Filter countries based on search term\nuseEffect(()=>{if(searchTerm.trim()===''){setFilteredCountries(countries);}else{const filtered=countries.filter(country=>country.name.common.toLowerCase().includes(searchTerm.toLowerCase()));setFilteredCountries(filtered);}},[searchTerm,countries]);const handleSearchChange=value=>{setSearchTerm(value);};const handleRegionChange=region=>{setSelectedRegion(region);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-filter-container\",children:[/*#__PURE__*/_jsx(SearchBar,{searchTerm:searchTerm,onSearchChange:handleSearchChange}),/*#__PURE__*/_jsx(FilterRegion,{selectedRegion:selectedRegion,onRegionChange:handleRegionChange})]}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',marginTop:'40px'},children:error}):filteredCountries.length===0?/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',marginTop:'40px'},children:\"No countries found\"}):/*#__PURE__*/_jsx(\"div\",{className:\"countries-grid\",children:filteredCountries.map(country=>/*#__PURE__*/_jsx(CountryCard,{country:country},country.cca3))})]});};export default HomePage;","map":{"version":3,"names":["React","useState","useEffect","CountryCard","SearchBar","FilterRegion","Loader","fetchAllCountries","fetchCountriesByRegion","jsx","_jsx","jsxs","_jsxs","HomePage","_ref","user","countries","setCountries","filteredCountries","setFilteredCountries","searchTerm","setSearchTerm","selectedRegion","setSelectedRegion","loading","setLoading","error","setError","getCountries","data","err","console","trim","filtered","filter","country","name","common","toLowerCase","includes","handleSearchChange","value","handleRegionChange","region","children","className","onSearchChange","onRegionChange","style","textAlign","marginTop","length","map","cca3"],"sources":["E:/sliit/AF/projet 2/af-2-it21287954-main/af-2-it21287954-main/frontend/src/pages/HomePage.js"],"sourcesContent":["// File: frontend/src/pages/HomePage.js\nimport React, { useState, useEffect } from 'react';\nimport CountryCard from '../components/CountryCard';\nimport SearchBar from '../components/SearchBar';\nimport FilterRegion from '../components/FilterRegion';\nimport Loader from '../components/Loader';\nimport { fetchAllCountries, fetchCountriesByRegion } from '../services/api';\n\nconst HomePage = ({ user }) => {\n  const [countries, setCountries] = useState([]);\n  const [filteredCountries, setFilteredCountries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedRegion, setSelectedRegion] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Fetch countries based on selected region\n  useEffect(() => {\n    const getCountries = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        \n        let data;\n        if (selectedRegion) {\n          data = await fetchCountriesByRegion(selectedRegion);\n        } else {\n          data = await fetchAllCountries();\n        }\n        \n        setCountries(data);\n        setFilteredCountries(data);\n      } catch (err) {\n        setError('Failed to fetch countries. Please try again later.');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    getCountries();\n  }, [selectedRegion]);\n\n  // Filter countries based on search term\n  useEffect(() => {\n    if (searchTerm.trim() === '') {\n      setFilteredCountries(countries);\n    } else {\n      const filtered = countries.filter(country => \n        country.name.common.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      setFilteredCountries(filtered);\n    }\n  }, [searchTerm, countries]);\n\n  const handleSearchChange = (value) => {\n    setSearchTerm(value);\n  };\n\n  const handleRegionChange = (region) => {\n    setSelectedRegion(region);\n  };\n\n  return (\n    <div>\n      <div className=\"search-filter-container\">\n        <SearchBar searchTerm={searchTerm} onSearchChange={handleSearchChange} />\n        <FilterRegion selectedRegion={selectedRegion} onRegionChange={handleRegionChange} />\n      </div>\n      \n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <p style={{ textAlign: 'center', marginTop: '40px' }}>{error}</p>\n      ) : filteredCountries.length === 0 ? (\n        <p style={{ textAlign: 'center', marginTop: '40px' }}>No countries found</p>\n      ) : (\n        <div className=\"countries-grid\">\n          {filteredCountries.map(country => (\n            <CountryCard key={country.cca3} country={country} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}